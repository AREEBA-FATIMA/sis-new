<<<<<<< HEAD
# Generated by Django 5.2.6 on 2025-09-26 12:04
=======
# Generated by Django 5.2.5 on 2025-09-27 18:00
>>>>>>> a5e5512 (changes)

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< HEAD
        ('courses', '0001_initial'),
        ('faculty', '0001_initial'),
        ('sessions', '0001_initial'),
        ('students', '0001_initial'),
=======
        ('campus', '0001_initial'),
        ('classes', '0002_classroom_capacity'),
        ('students', '0008_alter_studentenrollment_options'),
        ('teachers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
>>>>>>> a5e5512 (changes)
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for which attendance is recorded')),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused'), ('half_day', 'Half Day')], default='present', help_text='Attendance status of the student', max_length=20)),
                ('check_in_time', models.TimeField(blank=True, help_text='Time when student arrived (for present/late status)', null=True)),
                ('check_out_time', models.TimeField(blank=True, help_text='Time when student left (for half day or early departure)', null=True)),
                ('remarks', models.TextField(blank=True, help_text='Additional notes or remarks about attendance', null=True)),
                ('excuse_reason', models.CharField(blank=True, help_text='Reason for absence or late arrival', max_length=200, null=True)),
                ('excuse_document', models.FileField(blank=True, help_text='Upload excuse letter or medical certificate', null=True, upload_to='attendance/excuses/')),
                ('academic_year', models.CharField(help_text='Academic year (e.g., 2024-2025)', max_length=9)),
                ('semester', models.CharField(blank=True, help_text='Semester or term (e.g., First Term, Second Term)', max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campus', models.ForeignKey(help_text='Campus where attendance is recorded', on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='campus.campus')),
                ('class_teacher', models.ForeignKey(blank=True, help_text='Class teacher who marked the attendance', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_attendances', to='teachers.teacher')),
                ('classroom', models.ForeignKey(help_text='Class (Grade + Section) for which attendance is recorded', on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='classes.classroom')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this attendance record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_attendances', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(help_text='Student whose attendance is being recorded', on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='students.student')),
            ],
            options={
                'ordering': ['-date', 'student__name'],
                'indexes': [models.Index(fields=['date', 'classroom'], name='attendance__date_ae856c_idx'), models.Index(fields=['student', 'date'], name='attendance__student_76a8d7_idx'), models.Index(fields=['campus', 'date'], name='attendance__campus__1b3533_idx')],
                'unique_together': {('student', 'classroom', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AttendanceRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Rule name', max_length=100)),
                ('description', models.TextField(help_text='Rule description')),
                ('late_threshold_minutes', models.PositiveIntegerField(default=15, help_text='Minutes after which arrival is considered late')),
                ('max_absent_days', models.PositiveIntegerField(default=10, help_text='Maximum allowed absent days per month')),
                ('require_excuse_for_absence', models.BooleanField(default=True, help_text='Whether excuse is required for absence')),
                ('excuse_valid_days', models.PositiveIntegerField(default=3, help_text='Days within which excuse must be submitted')),
                ('half_day_threshold_hours', models.PositiveIntegerField(default=4, help_text='Hours after which departure is considered half day')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_rules', to='campus.campus')),
            ],
            options={
                'ordering': ['campus', 'name'],
                'unique_together': {('campus', 'name')},
            },
        ),
        migrations.CreateModel(
            name='AttendanceSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveIntegerField(help_text='Month (1-12)')),
                ('year', models.PositiveIntegerField(help_text='Year')),
                ('academic_year', models.CharField(help_text='Academic year', max_length=9)),
                ('total_days', models.PositiveIntegerField(default=0, help_text='Total working days in period')),
                ('present_days', models.PositiveIntegerField(default=0, help_text='Days present')),
                ('absent_days', models.PositiveIntegerField(default=0, help_text='Days absent')),
                ('late_days', models.PositiveIntegerField(default=0, help_text='Days late')),
                ('excused_days', models.PositiveIntegerField(default=0, help_text='Days excused')),
                ('half_days', models.PositiveIntegerField(default=0, help_text='Half days')),
                ('attendance_percentage', models.DecimalField(decimal_places=2, default=0.0, help_text='Attendance percentage', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_summaries', to='campus.campus')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_summaries', to='classes.classroom')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_summaries', to='students.student')),
            ],
            options={
                'ordering': ['-year', '-month', 'student__name'],
                'unique_together': {('student', 'classroom', 'month', 'year')},
            },
        ),
    ]
